# -*- coding: utf-8 -*-
"""WineQualityAnalysis.ipynb

Automatically generated by Colaboratory.


#Important necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
print("imported successfully.")

#Getting data from github
url_of_data = "https://raw.githubusercontent.com/mayurbhus/ML-Projects/main/Wine%20quality%20analysis/Data/winequality-red.csv"

#Load Dataset
data = pd.read_csv(url_of_data)
print("Data Loaded Successfully.")

#Data preprocessing
#Checking for missing values
print(data.isnull().sum())

#Spliting into features and target variables
X = data.drop(['quality'], axis = 1)
y = data['quality']
print("X = Features and y = Output")

#Splitting data into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)
print("Train and test sets created successfully.")

#Feature Scaling
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
print("Feature scaling is completed")

#Training the model
from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor(n_estimators = 200, random_state = 42)
rf.fit(X_train,y_train)
print("Model trained successfully")

#Making predictions
y_pred = rf.predict(X_test)
print("Predictions done")

#Evaluating the model
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test,y_pred)
print("Mean squared error : ",mse)

#Visualizing the result
plt.scatter(y_test, y_pred)
plt.xlabel("True Values")
plt.ylabel("Predictions")
plt.show()